// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0--rc1
// source: npool/service.proto

package npool

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionType int32

const (
	TransactionType_TransactionTypeUnKnow        TransactionType = 0
	TransactionType_TransactionTypeCreateAccount TransactionType = 1
	TransactionType_TransactionTypeTransaction   TransactionType = 2
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "TransactionTypeUnKnow",
		1: "TransactionTypeCreateAccount",
		2: "TransactionTypeTransaction",
	}
	TransactionType_value = map[string]int32{
		"TransactionTypeUnKnow":        0,
		"TransactionTypeCreateAccount": 1,
		"TransactionTypeTransaction":   2,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_npool_service_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_npool_service_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{0}
}

type CoinType int32

const (
	CoinType_CoinTypeUnKnow CoinType = 0
	CoinType_CoinTypeFIL    CoinType = 1
	CoinType_CoinTypeBTC    CoinType = 2
)

// Enum value maps for CoinType.
var (
	CoinType_name = map[int32]string{
		0: "CoinTypeUnKnow",
		1: "CoinTypeFIL",
		2: "CoinTypeBTC",
	}
	CoinType_value = map[string]int32{
		"CoinTypeUnKnow": 0,
		"CoinTypeFIL":    1,
		"CoinTypeBTC":    2,
	}
)

func (x CoinType) Enum() *CoinType {
	p := new(CoinType)
	*p = x
	return p
}

func (x CoinType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoinType) Descriptor() protoreflect.EnumDescriptor {
	return file_npool_service_proto_enumTypes[1].Descriptor()
}

func (CoinType) Type() protoreflect.EnumType {
	return &file_npool_service_proto_enumTypes[1]
}

func (x CoinType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoinType.Descriptor instead.
func (CoinType) EnumDescriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{1}
}

// RegisterAccount 参数
type RegisterAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Uuid   string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"` // user_id或与其绑定的唯一标识符
}

func (x *RegisterAccountRequest) Reset() {
	*x = RegisterAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAccountRequest) ProtoMessage() {}

func (x *RegisterAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAccountRequest.ProtoReflect.Descriptor instead.
func (*RegisterAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterAccountRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *RegisterAccountRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// RegisterAccount 返回
type AccountAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId  int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // 创建的钱包地址
	Uuid    string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`       // uuid将用于加密私钥，提高整体安全性
}

func (x *AccountAddress) Reset() {
	*x = AccountAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAddress) ProtoMessage() {}

func (x *AccountAddress) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAddress.ProtoReflect.Descriptor instead.
func (*AccountAddress) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{1}
}

func (x *AccountAddress) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *AccountAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AccountAddress) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// GetBalance 参数
type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId       int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Address      string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                // 查询的钱包地址
	TimestampUtc int64  `protobuf:"varint,3,opt,name=timestamp_utc,json=timestampUtc,proto3" json:"timestamp_utc,omitempty"` // 长整型时间戳
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetBalanceRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *GetBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetBalanceRequest) GetTimestampUtc() int64 {
	if x != nil {
		return x.TimestampUtc
	}
	return 0
}

// GetBalance 返回
type AccountBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId        int32   `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Address       string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                    // 查询的钱包地址
	TimestampUtc  int64   `protobuf:"varint,3,opt,name=timestamp_utc,json=timestampUtc,proto3" json:"timestamp_utc,omitempty"`     // 长整型时间戳
	AmountFloat64 float64 `protobuf:"fixed64,4,opt,name=amount_float64,json=amountFloat64,proto3" json:"amount_float64,omitempty"` // 不入库的参考金额
	AmountUint64  uint64  `protobuf:"varint,5,opt,name=amount_uint64,json=amountUint64,proto3" json:"amount_uint64,omitempty"`     // 内部交互标准金额格式
}

func (x *AccountBalance) Reset() {
	*x = AccountBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalance) ProtoMessage() {}

func (x *AccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalance.ProtoReflect.Descriptor instead.
func (*AccountBalance) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{3}
}

func (x *AccountBalance) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *AccountBalance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AccountBalance) GetTimestampUtc() int64 {
	if x != nil {
		return x.TimestampUtc
	}
	return 0
}

func (x *AccountBalance) GetAmountFloat64() float64 {
	if x != nil {
		return x.AmountFloat64
	}
	return 0
}

func (x *AccountBalance) GetAmountUint64() uint64 {
	if x != nil {
		return x.AmountUint64
	}
	return 0
}

// GetTxJSONRequest 参数
type GetTxJSONRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 继承钱包节点基础功能，预留
	CoinId      int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                             // 要查询的钱包地址
	TimefromUtc int64  `protobuf:"varint,3,opt,name=timefrom_utc,json=timefromUtc,proto3" json:"timefrom_utc,omitempty"` // 开始时间
	TimetillUtc int64  `protobuf:"varint,4,opt,name=timetill_utc,json=timetillUtc,proto3" json:"timetill_utc,omitempty"` // 结束时间
	LimitN      int32  `protobuf:"varint,5,opt,name=limit_n,json=limitN,proto3" json:"limit_n,omitempty"`                // 服务端限制返回条数
}

func (x *GetTxJSONRequest) Reset() {
	*x = GetTxJSONRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxJSONRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxJSONRequest) ProtoMessage() {}

func (x *GetTxJSONRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxJSONRequest.ProtoReflect.Descriptor instead.
func (*GetTxJSONRequest) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetTxJSONRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *GetTxJSONRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetTxJSONRequest) GetTimefromUtc() int64 {
	if x != nil {
		return x.TimefromUtc
	}
	return 0
}

func (x *GetTxJSONRequest) GetTimetillUtc() int64 {
	if x != nil {
		return x.TimetillUtc
	}
	return 0
}

func (x *GetTxJSONRequest) GetLimitN() int32 {
	if x != nil {
		return x.LimitN
	}
	return 0
}

// GetTxJSONRequest 返回
type AccountTxJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *AccountTxJSON) Reset() {
	*x = AccountTxJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTxJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTxJSON) ProtoMessage() {}

func (x *AccountTxJSON) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTxJSON.ProtoReflect.Descriptor instead.
func (*AccountTxJSON) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{5}
}

func (x *AccountTxJSON) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

// GetInsiteTxStatus 参数
type GetInsiteTxStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionIdInsite string `protobuf:"bytes,1,opt,name=transaction_id_insite,json=transactionIdInsite,proto3" json:"transaction_id_insite,omitempty"` // 站内交易ID
}

func (x *GetInsiteTxStatusRequest) Reset() {
	*x = GetInsiteTxStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsiteTxStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsiteTxStatusRequest) ProtoMessage() {}

func (x *GetInsiteTxStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsiteTxStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInsiteTxStatusRequest) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetInsiteTxStatusRequest) GetTransactionIdInsite() string {
	if x != nil {
		return x.TransactionIdInsite
	}
	return ""
}

// GetInsiteTxStatus 返回
type GetInsiteTxStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId              int32   `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	AmountFloat64       float64 `protobuf:"fixed64,2,opt,name=amount_float64,json=amountFloat64,proto3" json:"amount_float64,omitempty"`                   // 不入库的参考金额
	AmountUint64        uint64  `protobuf:"varint,3,opt,name=amount_uint64,json=amountUint64,proto3" json:"amount_uint64,omitempty"`                       // 内部交互标准金额格式
	AddressFrom         string  `protobuf:"bytes,4,opt,name=address_from,json=addressFrom,proto3" json:"address_from,omitempty"`                           // 发送方
	AddressTo           string  `protobuf:"bytes,5,opt,name=address_to,json=addressTo,proto3" json:"address_to,omitempty"`                                 // 接收方
	InsiteTxType        string  `protobuf:"bytes,6,opt,name=insite_tx_type,json=insiteTxType,proto3" json:"insite_tx_type,omitempty"`                      // recharge, payment, withdraw, unknown
	TransactionIdInsite string  `protobuf:"bytes,7,opt,name=transaction_id_insite,json=transactionIdInsite,proto3" json:"transaction_id_insite,omitempty"` // 站内交易ID
	TransactionIdChain  string  `protobuf:"bytes,8,opt,name=transaction_id_chain,json=transactionIdChain,proto3" json:"transaction_id_chain,omitempty"`    // 公链交易ID（如有）
	Status              string  `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`                                                        // 为done则成功；全部状态："pending_review", "pending_process", "pending_signinfo", "pending_signaction", "pending_broadcast", "pending_confirm", "done", "rejected", "error", "error_expected"
	IsProcessing        bool    `protobuf:"varint,10,opt,name=is_processing,json=isProcessing,proto3" json:"is_processing,omitempty"`                      // 对应数据库中mutex
	CreatetimeUtc       int64   `protobuf:"varint,11,opt,name=createtime_utc,json=createtimeUtc,proto3" json:"createtime_utc,omitempty"`                   // 创建时间
	UpdatetimeUtc       int64   `protobuf:"varint,12,opt,name=updatetime_utc,json=updatetimeUtc,proto3" json:"updatetime_utc,omitempty"`                   // 上次更新时间
	IsSuccess           bool    `protobuf:"varint,13,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`                               // 便于调用方判断
	IsFailed            bool    `protobuf:"varint,14,opt,name=is_failed,json=isFailed,proto3" json:"is_failed,omitempty"`                                  // 不success不fail就是pending了
}

func (x *GetInsiteTxStatusResponse) Reset() {
	*x = GetInsiteTxStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsiteTxStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsiteTxStatusResponse) ProtoMessage() {}

func (x *GetInsiteTxStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsiteTxStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInsiteTxStatusResponse) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetInsiteTxStatusResponse) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *GetInsiteTxStatusResponse) GetAmountFloat64() float64 {
	if x != nil {
		return x.AmountFloat64
	}
	return 0
}

func (x *GetInsiteTxStatusResponse) GetAmountUint64() uint64 {
	if x != nil {
		return x.AmountUint64
	}
	return 0
}

func (x *GetInsiteTxStatusResponse) GetAddressFrom() string {
	if x != nil {
		return x.AddressFrom
	}
	return ""
}

func (x *GetInsiteTxStatusResponse) GetAddressTo() string {
	if x != nil {
		return x.AddressTo
	}
	return ""
}

func (x *GetInsiteTxStatusResponse) GetInsiteTxType() string {
	if x != nil {
		return x.InsiteTxType
	}
	return ""
}

func (x *GetInsiteTxStatusResponse) GetTransactionIdInsite() string {
	if x != nil {
		return x.TransactionIdInsite
	}
	return ""
}

func (x *GetInsiteTxStatusResponse) GetTransactionIdChain() string {
	if x != nil {
		return x.TransactionIdChain
	}
	return ""
}

func (x *GetInsiteTxStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetInsiteTxStatusResponse) GetIsProcessing() bool {
	if x != nil {
		return x.IsProcessing
	}
	return false
}

func (x *GetInsiteTxStatusResponse) GetCreatetimeUtc() int64 {
	if x != nil {
		return x.CreatetimeUtc
	}
	return 0
}

func (x *GetInsiteTxStatusResponse) GetUpdatetimeUtc() int64 {
	if x != nil {
		return x.UpdatetimeUtc
	}
	return 0
}

func (x *GetInsiteTxStatusResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *GetInsiteTxStatusResponse) GetIsFailed() bool {
	if x != nil {
		return x.IsFailed
	}
	return false
}

// ApplyTransaction 参数
type ApplyTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId              int32   `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	TransactionIdInsite string  `protobuf:"bytes,2,opt,name=transaction_id_insite,json=transactionIdInsite,proto3" json:"transaction_id_insite,omitempty"` // 站内交易ID
	AddressFrom         string  `protobuf:"bytes,3,opt,name=address_from,json=addressFrom,proto3" json:"address_from,omitempty"`                           // 发送方
	AddressTo           string  `protobuf:"bytes,4,opt,name=address_to,json=addressTo,proto3" json:"address_to,omitempty"`                                 // 接收方
	AmountFloat64       float64 `protobuf:"fixed64,5,opt,name=amount_float64,json=amountFloat64,proto3" json:"amount_float64,omitempty"`                   // 不入库的参考金额
	AmountUint64        uint64  `protobuf:"varint,6,opt,name=amount_uint64,json=amountUint64,proto3" json:"amount_uint64,omitempty"`                       // 内部交互标准金额格式
	Type                string  `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                                                            // recharge, payment, withdraw
	UuidSignature       string  `protobuf:"bytes,8,opt,name=uuid_signature,json=uuidSignature,proto3" json:"uuid_signature,omitempty"`                     // 2FA的时效性验证码，前期可以留空
	CreatetimeUtc       int64   `protobuf:"varint,9,opt,name=createtime_utc,json=createtimeUtc,proto3" json:"createtime_utc,omitempty"`                    // 用户提交请求时的时间戳，与2FA绑定
}

func (x *ApplyTransactionRequest) Reset() {
	*x = ApplyTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyTransactionRequest) ProtoMessage() {}

func (x *ApplyTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyTransactionRequest.ProtoReflect.Descriptor instead.
func (*ApplyTransactionRequest) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{8}
}

func (x *ApplyTransactionRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *ApplyTransactionRequest) GetTransactionIdInsite() string {
	if x != nil {
		return x.TransactionIdInsite
	}
	return ""
}

func (x *ApplyTransactionRequest) GetAddressFrom() string {
	if x != nil {
		return x.AddressFrom
	}
	return ""
}

func (x *ApplyTransactionRequest) GetAddressTo() string {
	if x != nil {
		return x.AddressTo
	}
	return ""
}

func (x *ApplyTransactionRequest) GetAmountFloat64() float64 {
	if x != nil {
		return x.AmountFloat64
	}
	return 0
}

func (x *ApplyTransactionRequest) GetAmountUint64() uint64 {
	if x != nil {
		return x.AmountUint64
	}
	return 0
}

func (x *ApplyTransactionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApplyTransactionRequest) GetUuidSignature() string {
	if x != nil {
		return x.UuidSignature
	}
	return ""
}

func (x *ApplyTransactionRequest) GetCreatetimeUtc() int64 {
	if x != nil {
		return x.CreatetimeUtc
	}
	return 0
}

type SuccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // "success"
}

func (x *SuccessInfo) Reset() {
	*x = SuccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessInfo) ProtoMessage() {}

func (x *SuccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessInfo.ProtoReflect.Descriptor instead.
func (*SuccessInfo) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{9}
}

func (x *SuccessInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{10}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// 向proxy请求代理
type TransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionType TransactionType  `protobuf:"varint,100,opt,name=TransactionType,proto3,enum=sphinx.v1.TransactionType" json:"TransactionType,omitempty"`
	CoinType        CoinType         `protobuf:"varint,110,opt,name=CoinType,proto3,enum=sphinx.v1.CoinType" json:"CoinType,omitempty"`
	Message         *UnsignedMessage `protobuf:"bytes,120,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{11}
}

func (x *TransactionRequest) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TransactionTypeUnKnow
}

func (x *TransactionRequest) GetCoinType() CoinType {
	if x != nil {
		return x.CoinType
	}
	return CoinType_CoinTypeUnKnow
}

func (x *TransactionRequest) GetMessage() *UnsignedMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type UnsignedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    uint64 `protobuf:"varint,100,opt,name=Version,proto3" json:"Version,omitempty"`
	To         string `protobuf:"bytes,110,opt,name=To,proto3" json:"To,omitempty"`
	From       string `protobuf:"bytes,120,opt,name=From,proto3" json:"From,omitempty"`
	Nonce      uint64 `protobuf:"varint,130,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Value      string `protobuf:"bytes,140,opt,name=Value,proto3" json:"Value,omitempty"`
	GasLimit   int64  `protobuf:"varint,150,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasFeeCap  string `protobuf:"bytes,160,opt,name=GasFeeCap,proto3" json:"GasFeeCap,omitempty"`
	GasPremium string `protobuf:"bytes,170,opt,name=GasPremium,proto3" json:"GasPremium,omitempty"`
	Method     uint64 `protobuf:"varint,180,opt,name=Method,proto3" json:"Method,omitempty"`
	Params     []byte `protobuf:"bytes,190,opt,name=Params,proto3" json:"Params,omitempty"`
}

func (x *UnsignedMessage) Reset() {
	*x = UnsignedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsignedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignedMessage) ProtoMessage() {}

func (x *UnsignedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignedMessage.ProtoReflect.Descriptor instead.
func (*UnsignedMessage) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{12}
}

func (x *UnsignedMessage) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UnsignedMessage) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *UnsignedMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *UnsignedMessage) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UnsignedMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UnsignedMessage) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *UnsignedMessage) GetGasFeeCap() string {
	if x != nil {
		return x.GasFeeCap
	}
	return ""
}

func (x *UnsignedMessage) GetGasPremium() string {
	if x != nil {
		return x.GasPremium
	}
	return ""
}

func (x *UnsignedMessage) GetMethod() uint64 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *UnsignedMessage) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

type TransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TransactionResponseInfo `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{13}
}

func (x *TransactionResponse) GetInfo() *TransactionResponseInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type TransactionResponseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string           `protobuf:"bytes,100,opt,name=Address,proto3" json:"Address,omitempty"` // create new account address
	Message   *UnsignedMessage `protobuf:"bytes,110,opt,name=Message,proto3" json:"Message,omitempty"`
	Signature *Signature       `protobuf:"bytes,120,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *TransactionResponseInfo) Reset() {
	*x = TransactionResponseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResponseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponseInfo) ProtoMessage() {}

func (x *TransactionResponseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponseInfo.ProtoReflect.Descriptor instead.
func (*TransactionResponseInfo) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{14}
}

func (x *TransactionResponseInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransactionResponseInfo) GetMessage() *UnsignedMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *TransactionResponseInfo) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignType string `protobuf:"bytes,100,opt,name=SignType,proto3" json:"SignType,omitempty"` //secp256k1
	Data     []byte `protobuf:"bytes,110,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_npool_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_npool_service_proto_rawDescGZIP(), []int{15}
}

func (x *Signature) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *Signature) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_npool_service_proto protoreflect.FileDescriptor

var file_npool_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x16, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x57, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x75, 0x74, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x74, 0x63, 0x22, 0xb4, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x74, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x55, 0x74, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x22,
	0xa4, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x74, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x69, 0x6c, 0x6c, 0x55, 0x74, 0x63, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x22, 0x23, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x78, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x22, 0x95, 0x04, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x78, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x69, 0x74, 0x65,
	0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63,
	0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x74, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x22, 0xd6, 0x02, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x36, 0x34, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x75, 0x69, 0x64, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x22, 0x21, 0x0a, 0x0b,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x6e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x0f, 0x55,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x15, 0x0a, 0x05,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x8c, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x47, 0x61,
	0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x47,
	0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65,
	0x65, 0x43, 0x61, 0x70, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x61, 0x73,
	0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0a, 0x47, 0x61, 0x73, 0x50, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x47, 0x61, 0x73,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x17, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0xbe, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x13, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3b, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x2a, 0x6e, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x4b, 0x6e, 0x6f,
	0x77, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x02, 0x2a, 0x40, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x4b,
	0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x54, 0x43, 0x10, 0x02, 0x32, 0x9a, 0x04, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x70, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x70, 0x68, 0x69,
	0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x10, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e,
	0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x44, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x1b, 0x2e, 0x73, 0x70, 0x68,
	0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4a, 0x53, 0x4f, 0x4e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x78, 0x4a, 0x53, 0x4f,
	0x4e, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65,
	0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x69, 0x74, 0x65, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x64, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x68, 0x69,
	0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_service_proto_rawDescOnce sync.Once
	file_npool_service_proto_rawDescData = file_npool_service_proto_rawDesc
)

func file_npool_service_proto_rawDescGZIP() []byte {
	file_npool_service_proto_rawDescOnce.Do(func() {
		file_npool_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_service_proto_rawDescData)
	})
	return file_npool_service_proto_rawDescData
}

var file_npool_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_npool_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_npool_service_proto_goTypes = []interface{}{
	(TransactionType)(0),              // 0: sphinx.v1.TransactionType
	(CoinType)(0),                     // 1: sphinx.v1.CoinType
	(*RegisterAccountRequest)(nil),    // 2: sphinx.v1.RegisterAccountRequest
	(*AccountAddress)(nil),            // 3: sphinx.v1.AccountAddress
	(*GetBalanceRequest)(nil),         // 4: sphinx.v1.GetBalanceRequest
	(*AccountBalance)(nil),            // 5: sphinx.v1.AccountBalance
	(*GetTxJSONRequest)(nil),          // 6: sphinx.v1.GetTxJSONRequest
	(*AccountTxJSON)(nil),             // 7: sphinx.v1.AccountTxJSON
	(*GetInsiteTxStatusRequest)(nil),  // 8: sphinx.v1.GetInsiteTxStatusRequest
	(*GetInsiteTxStatusResponse)(nil), // 9: sphinx.v1.GetInsiteTxStatusResponse
	(*ApplyTransactionRequest)(nil),   // 10: sphinx.v1.ApplyTransactionRequest
	(*SuccessInfo)(nil),               // 11: sphinx.v1.SuccessInfo
	(*VersionResponse)(nil),           // 12: sphinx.v1.VersionResponse
	(*TransactionRequest)(nil),        // 13: sphinx.v1.TransactionRequest
	(*UnsignedMessage)(nil),           // 14: sphinx.v1.UnsignedMessage
	(*TransactionResponse)(nil),       // 15: sphinx.v1.TransactionResponse
	(*TransactionResponseInfo)(nil),   // 16: sphinx.v1.TransactionResponseInfo
	(*Signature)(nil),                 // 17: sphinx.v1.Signature
	(*emptypb.Empty)(nil),             // 18: google.protobuf.Empty
}
var file_npool_service_proto_depIdxs = []int32{
	0,  // 0: sphinx.v1.TransactionRequest.TransactionType:type_name -> sphinx.v1.TransactionType
	1,  // 1: sphinx.v1.TransactionRequest.CoinType:type_name -> sphinx.v1.CoinType
	14, // 2: sphinx.v1.TransactionRequest.Message:type_name -> sphinx.v1.UnsignedMessage
	16, // 3: sphinx.v1.TransactionResponse.Info:type_name -> sphinx.v1.TransactionResponseInfo
	14, // 4: sphinx.v1.TransactionResponseInfo.Message:type_name -> sphinx.v1.UnsignedMessage
	17, // 5: sphinx.v1.TransactionResponseInfo.Signature:type_name -> sphinx.v1.Signature
	2,  // 6: sphinx.v1.Trading.RegisterAccount:input_type -> sphinx.v1.RegisterAccountRequest
	4,  // 7: sphinx.v1.Trading.GetBalance:input_type -> sphinx.v1.GetBalanceRequest
	10, // 8: sphinx.v1.Trading.ApplyTransaction:input_type -> sphinx.v1.ApplyTransactionRequest
	6,  // 9: sphinx.v1.Trading.GetTxJSON:input_type -> sphinx.v1.GetTxJSONRequest
	8,  // 10: sphinx.v1.Trading.GetInsiteTxStatus:input_type -> sphinx.v1.GetInsiteTxStatusRequest
	18, // 11: sphinx.v1.ServiceExample.Version:input_type -> google.protobuf.Empty
	3,  // 12: sphinx.v1.Trading.RegisterAccount:output_type -> sphinx.v1.AccountAddress
	5,  // 13: sphinx.v1.Trading.GetBalance:output_type -> sphinx.v1.AccountBalance
	11, // 14: sphinx.v1.Trading.ApplyTransaction:output_type -> sphinx.v1.SuccessInfo
	7,  // 15: sphinx.v1.Trading.GetTxJSON:output_type -> sphinx.v1.AccountTxJSON
	9,  // 16: sphinx.v1.Trading.GetInsiteTxStatus:output_type -> sphinx.v1.GetInsiteTxStatusResponse
	12, // 17: sphinx.v1.ServiceExample.Version:output_type -> sphinx.v1.VersionResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_npool_service_proto_init() }
func file_npool_service_proto_init() {
	if File_npool_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxJSONRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTxJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsiteTxStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsiteTxStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsignedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResponseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_npool_service_proto_goTypes,
		DependencyIndexes: file_npool_service_proto_depIdxs,
		EnumInfos:         file_npool_service_proto_enumTypes,
		MessageInfos:      file_npool_service_proto_msgTypes,
	}.Build()
	File_npool_service_proto = out.File
	file_npool_service_proto_rawDesc = nil
	file_npool_service_proto_goTypes = nil
	file_npool_service_proto_depIdxs = nil
}
